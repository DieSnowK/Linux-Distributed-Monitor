// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Net_Info.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_Net_5fInfo_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Net_5fInfo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Net_5fInfo_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Net_5fInfo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Net_5fInfo_2eproto;
namespace monitor {
class NetInfo;
struct NetInfoDefaultTypeInternal;
extern NetInfoDefaultTypeInternal _NetInfo_default_instance_;
}  // namespace monitor
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace monitor {

// ===================================================================


// -------------------------------------------------------------------

class NetInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:monitor.NetInfo) */ {
 public:
  inline NetInfo() : NetInfo(nullptr) {}
  ~NetInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetInfo(const NetInfo& from) : NetInfo(nullptr, from) {}
  inline NetInfo(NetInfo&& from) noexcept
      : NetInfo(nullptr, std::move(from)) {}
  inline NetInfo& operator=(const NetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetInfo& operator=(NetInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetInfo* internal_default_instance() {
    return reinterpret_cast<const NetInfo*>(
        &_NetInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NetInfo& a, NetInfo& b) { a.Swap(&b); }
  inline void Swap(NetInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NetInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetInfo& from) { NetInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NetInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "monitor.NetInfo"; }

 protected:
  explicit NetInfo(::google::protobuf::Arena* arena);
  NetInfo(::google::protobuf::Arena* arena, const NetInfo& from);
  NetInfo(::google::protobuf::Arena* arena, NetInfo&& from) noexcept
      : NetInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kSendRateFieldNumber = 2,
    kRcvRateFieldNumber = 3,
    kSendPacketsRateFieldNumber = 4,
    kRcvPacketsRateFieldNumber = 5,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // float send_rate = 2;
  void clear_send_rate() ;
  float send_rate() const;
  void set_send_rate(float value);

  private:
  float _internal_send_rate() const;
  void _internal_set_send_rate(float value);

  public:
  // float rcv_rate = 3;
  void clear_rcv_rate() ;
  float rcv_rate() const;
  void set_rcv_rate(float value);

  private:
  float _internal_rcv_rate() const;
  void _internal_set_rcv_rate(float value);

  public:
  // float send_packets_rate = 4;
  void clear_send_packets_rate() ;
  float send_packets_rate() const;
  void set_send_packets_rate(float value);

  private:
  float _internal_send_packets_rate() const;
  void _internal_set_send_packets_rate(float value);

  public:
  // float rcv_packets_rate = 5;
  void clear_rcv_packets_rate() ;
  float rcv_packets_rate() const;
  void set_rcv_packets_rate(float value);

  private:
  float _internal_rcv_packets_rate() const;
  void _internal_set_rcv_packets_rate(float value);

  public:
  // @@protoc_insertion_point(class_scope:monitor.NetInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      28, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NetInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    float send_rate_;
    float rcv_rate_;
    float send_packets_rate_;
    float rcv_packets_rate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Net_5fInfo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NetInfo

// string name = 1;
inline void NetInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& NetInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:monitor.NetInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:monitor.NetInfo.name)
}
inline std::string* NetInfo::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:monitor.NetInfo.name)
  return _s;
}
inline const std::string& NetInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void NetInfo::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* NetInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* NetInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:monitor.NetInfo.name)
  return _impl_.name_.Release();
}
inline void NetInfo::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:monitor.NetInfo.name)
}

// float send_rate = 2;
inline void NetInfo::clear_send_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_rate_ = 0;
}
inline float NetInfo::send_rate() const {
  // @@protoc_insertion_point(field_get:monitor.NetInfo.send_rate)
  return _internal_send_rate();
}
inline void NetInfo::set_send_rate(float value) {
  _internal_set_send_rate(value);
  // @@protoc_insertion_point(field_set:monitor.NetInfo.send_rate)
}
inline float NetInfo::_internal_send_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_rate_;
}
inline void NetInfo::_internal_set_send_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_rate_ = value;
}

// float rcv_rate = 3;
inline void NetInfo::clear_rcv_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rcv_rate_ = 0;
}
inline float NetInfo::rcv_rate() const {
  // @@protoc_insertion_point(field_get:monitor.NetInfo.rcv_rate)
  return _internal_rcv_rate();
}
inline void NetInfo::set_rcv_rate(float value) {
  _internal_set_rcv_rate(value);
  // @@protoc_insertion_point(field_set:monitor.NetInfo.rcv_rate)
}
inline float NetInfo::_internal_rcv_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rcv_rate_;
}
inline void NetInfo::_internal_set_rcv_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rcv_rate_ = value;
}

// float send_packets_rate = 4;
inline void NetInfo::clear_send_packets_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_packets_rate_ = 0;
}
inline float NetInfo::send_packets_rate() const {
  // @@protoc_insertion_point(field_get:monitor.NetInfo.send_packets_rate)
  return _internal_send_packets_rate();
}
inline void NetInfo::set_send_packets_rate(float value) {
  _internal_set_send_packets_rate(value);
  // @@protoc_insertion_point(field_set:monitor.NetInfo.send_packets_rate)
}
inline float NetInfo::_internal_send_packets_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_packets_rate_;
}
inline void NetInfo::_internal_set_send_packets_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_packets_rate_ = value;
}

// float rcv_packets_rate = 5;
inline void NetInfo::clear_rcv_packets_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rcv_packets_rate_ = 0;
}
inline float NetInfo::rcv_packets_rate() const {
  // @@protoc_insertion_point(field_get:monitor.NetInfo.rcv_packets_rate)
  return _internal_rcv_packets_rate();
}
inline void NetInfo::set_rcv_packets_rate(float value) {
  _internal_set_rcv_packets_rate(value);
  // @@protoc_insertion_point(field_set:monitor.NetInfo.rcv_packets_rate)
}
inline float NetInfo::_internal_rcv_packets_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rcv_packets_rate_;
}
inline void NetInfo::_internal_set_rcv_packets_rate(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rcv_packets_rate_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace monitor


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Net_5fInfo_2eproto_2epb_2eh
